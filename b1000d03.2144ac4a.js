(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{243:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return c}));var n=a(3),r=a(7),l=(a(0),a(326)),i={id:"problemsolving",title:"Whack-a-mole",slug:"/problemsolving"},o={unversionedId:"problemsolving",id:"problemsolving",isDocsHomePage:!1,title:"Whack-a-mole",description:"Summary",source:"@site/docs\\problemsolving.md",slug:"/problemsolving",permalink:"/singusaurus/docs/problemsolving",editUrl:"https://github.com/Singulars2021/singusaurus/tree/main/docs/docs/problemsolving.md",version:"current",sidebar:"someSidebar",previous:{title:"SinguSaurus",permalink:"/singusaurus/docs/"},next:{title:"Vue Exercises",permalink:"/singusaurus/docs/vue_exercises"}},s=[{value:"Summary",id:"summary",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Future requeriments",id:"future-requeriments",children:[]},{value:"Configuration and state management",id:"configuration-and-state-management",children:[]},{value:"User interface and DOM manipulation",id:"user-interface-and-dom-manipulation",children:[]}],u={toc:s};function c(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h3",{id:"summary"},"Summary"),Object(l.b)("p",null,"The aim of this exercise is to ",Object(l.b)("strong",{parentName:"p"},"think")," about how to solve a problem without actually thinking how to solve it using any programming language."),Object(l.b)("p",null,"We want to implement a game which consist in ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://romeojeremiah.github.io/whack-a-mole/"}),"smashing some moles")),Object(l.b)("h3",{id:"requirements"},"Requirements"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"The moles will show up from several holes in the ground."),Object(l.b)("li",{parentName:"ol"},"We need a button to allow the player to start the game"),Object(l.b)("li",{parentName:"ol"},"A counter will hold the player's score"),Object(l.b)("li",{parentName:"ol"},"There's a timer. When the timer reaches 0; the game ends."),Object(l.b)("li",{parentName:"ol"},"The moles will appear randomly and at different speed levels while there's game time remaining."),Object(l.b)("li",{parentName:"ol"},"When the time is over, moles stop popping up, and display a message of end with your score.")),Object(l.b)("h3",{id:"future-requeriments"},"Future requeriments"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"The holes could be replaced by different landscapes"),Object(l.b)("li",{parentName:"ol"},"The user could set up the game's level",Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"Number of holes"),Object(l.b)("li",{parentName:"ol"},"Min and max speed of mole's animation"),Object(l.b)("li",{parentName:"ol"},"Game time"))),Object(l.b)("li",{parentName:"ol"},"It could be fancy that all the moles show up before game starts. After game starts, all moles will hide."),Object(l.b)("li",{parentName:"ol"},"Allow to the user to set up the timer's visibility."),Object(l.b)("li",{parentName:"ol"},'When "Start" button pressed, we hide it and we display a "Restart" button'),Object(l.b)("li",{parentName:"ol"},"Scoreboard on localStorage",Object(l.b)("ol",{parentName:"li"},Object(l.b)("li",{parentName:"ol"},"Save the score"),Object(l.b)("li",{parentName:"ol"},"Save username with input will display at the end of game")))),Object(l.b)("h3",{id:"configuration-and-state-management"},"Configuration and state management"),Object(l.b)("p",null,"Which variables could be useful to hold our app state?"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Score",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Every succesfull hit on a mole, score goes one up"),Object(l.b)("li",{parentName:"ul"},"Restart the game, updates counter to 0"))),Object(l.b)("li",{parentName:"ul"},"Remaining game time",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"When the game restarts, the timer get the value of initial game time"),Object(l.b)("li",{parentName:"ul"},"Every second gets updated"))),Object(l.b)("li",{parentName:"ul"},"Game state: ready, end, playing ",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},'Ready: When the game loads and before user clicking "Start"'),Object(l.b)("li",{parentName:"ul"},"End: When the time finishes"),Object(l.b)("li",{parentName:"ul"},'Playing: User clicks "Start" button'))),Object(l.b)("li",{parentName:"ul"},"Next hole in which the mole will appear",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"When the previous mole finishes the showing animation, we calculate a new hole."))),Object(l.b)("li",{parentName:"ul"},"Max and min speed mole"),Object(l.b)("li",{parentName:"ul"},"Number of holes"),Object(l.b)("li",{parentName:"ul"},"Initial game time")),Object(l.b)("h3",{id:"user-interface-and-dom-manipulation"},"User interface and DOM manipulation"),Object(l.b)("h4",{id:"start"},"Start"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'Pressing the "Start" button initialize the game')),Object(l.b)("h4",{id:"score"},"Score"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"We will use a textual counter inicialized at 0, and every time the user succesfully clicks a mole, the counter will get upgraded by one."),Object(l.b)("li",{parentName:"ul"},"At pressing the start button again to restart the game, the counter will get automatically updated to 0.")),Object(l.b)("h4",{id:"moles"},"Moles"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Before starting the game, under the start button, the user will see a grid system that will display the holes and moles ready for starting the game"),Object(l.b)("li",{parentName:"ul"},"When we start the game, we will hide the moles, and they will start popping up randomly and get ready to get clicked.")),Object(l.b)("h4",{id:"end-message"},"End Message"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"At the end of game, we show a message with the total score of the user")))}c.isMDXComponent=!0},326:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=r.a.createContext({}),c=function(e){var t=r.a.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=c(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(a),p=n,d=m["".concat(i,".").concat(p)]||m[p]||b[p]||l;return a?r.a.createElement(d,o(o({ref:t},u),{},{components:a})):r.a.createElement(d,o({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);